# name: Deploy to Butterfly Microservice Notification Development Server

# on:
#   push:
#     branches: [ "development" ]
#     tags: [ 'v*.*.*' ]

# env:
#   REGISTRY: docker.io
#   IMAGE_NAME: 1bitdev/1bit
#   SERVICE: notification-service
#   DIRECTORY: butterfly
#   CONTAINER_NAME: notification.websocket

# jobs:
#   build:

#     runs-on: ubuntu-latest
#     permissions:
#       contents: read
#       packages: write
#       id-token: write

#     steps:
#       - name: Checkout repository
#         uses: actions/checkout@v3

#       - name: Set up Docker Buildx
#         uses: docker/setup-buildx-action@f95db51fddba0c2d1ec667646a06c2ce06100226 # v3.0.0

#       - name: Log into registry ${{ env.REGISTRY }}
#         uses: docker/login-action@343f7c4344506bcbf9b4de18042ae17996df046d # v3.0.0
#         with:
#           registry: ${{ env.REGISTRY }}
#           username: ${{ secrets.DOCKER_USERNAME }}
#           password: ${{ secrets.DOCKER_ACCESS_TOKEN }}

#       - name: Extract Docker metadata
#         id: meta
#         uses: docker/metadata-action@96383f45573cb7f253c731d3b3ab81c87ef81934 # v5.0.0
#         with:
#           images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

#       - name: Build and push Docker image
#         id: build-and-push
#         uses: docker/build-push-action@0565240e2d4ab88bba5387d719585280857ece09 # v5.0.0
#         with:
#           context: .
#           push: ${{ github.event_name != 'pull_request' }}
#           tags: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ env.SERVICE }}-${{ steps.meta.outputs.version }}
#           labels: ${{ steps.meta.outputs.labels }}
#           cache-from: type=gha
#           cache-to: type=gha,mode=max

#       - name: Set up SSH key
#         uses: webfactory/ssh-agent@v0.7.0
#         with:
#           ssh-private-key: ${{ secrets.SERVER_SSH_PRIVATE_KEY }}

#       - name: Add hosts
#         run: echo "18.136.247.108 ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIGVovL268wBjyFFeR8nnJnyKBxmWcGLDgfOt9MMnbfM5" >> ~/.ssh/known_hosts

#       - name: Deploy Docker image and restart container
#         run: |
#           ssh admin@18.136.247.108 "docker pull ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ env.SERVICE }}-${{ steps.meta.outputs.version }}"
#           ssh admin@18.136.247.108 "cd /home/admin/projects/${{ env.DIRECTORY }} && docker compose up -d ${{ env.SERVICE }} --force-recreate"
#           ssh admin@18.136.247.108 "cd /home/admin/projects/${{ env.DIRECTORY }} && docker exec ${{ env.CONTAINER_NAME }} bash -c 'source deploy.sh'"

#       - name: Sent deployment notification
#         run: ./notif.sh "ðŸŽ‰Fortune Production (rg.games) - Fortune API service deployed successfully"
